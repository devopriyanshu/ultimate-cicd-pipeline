pipeline {
    agent {
        docker {
            image 'maven:3.9.4-eclipse-temurin-17'  // Includes JDK 17 + Maven
            args '-v /var/run/docker.sock:/var/run/docker.sock'  // To build Docker images inside container
        }
    }

    environment {
        SONAR_URL = 'http://host.docker.internal:9000'
        SONAR_TOKEN = credentials('sonarqube') // Jenkins credentials (Secret Text)
        DOCKER_HUB_REPO = 'devopriyanshu/spring-app'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/devopriyanshu/ultimate-cicd-pipeline.git'
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh '''
                    mvn sonar:sonar \
                      -Dsonar.projectKey=spring-app \
                      -Dsonar.host.url=$SONAR_URL \
                      -Dsonar.login=$SONAR_TOKEN
                    '''
                }
            }
        }

        stage('Docker Build & Push') {
            environment {
                DOCKER_CREDENTIALS = credentials('docker-cred') // DockerHub username/password or token
            }
            steps {
                sh '''
                echo "$DOCKER_CREDENTIALS_PSW" | docker login -u "$DOCKER_CREDENTIALS_USR" --password-stdin
                docker build -t $DOCKER_HUB_REPO:$BUILD_NUMBER .
                docker push $DOCKER_HUB_REPO:$BUILD_NUMBER
                docker logout
                '''
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                sh '''
                kubectl set image deployment/spring-app spring-app=$DOCKER_HUB_REPO:$BUILD_NUMBER --record
                '''
            }
        }
    }
}
